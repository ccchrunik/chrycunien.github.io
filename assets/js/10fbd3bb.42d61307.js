(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4504],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=c(n),d=a,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||l;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var c=2;c<l;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9140:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return m}});var r=n(4034),a=n(9973),l=(n(7294),n(3905)),i=["components"],o={},s="Pods",c={unversionedId:"Cloud/Kubernetes/Basics/Pods",id:"Cloud/Kubernetes/Basics/Pods",isDocsHomePage:!1,title:"Pods",description:"- Basic building blocks",source:"@site/docs/Cloud/Kubernetes/Basics/Pods.md",sourceDirName:"Cloud/Kubernetes/Basics",slug:"/Cloud/Kubernetes/Basics/Pods",permalink:"/docs/Cloud/Kubernetes/Basics/Pods",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/docs/Cloud/Kubernetes/Basics/Overview"},next:{title:"Probes",permalink:"/docs/Cloud/Kubernetes/Basics/Probes"}},u=[{value:"Declaration",id:"declaration",children:[],level:2},{value:"Benefits",id:"benefits",children:[],level:2},{value:"Create",id:"create",children:[],level:2},{value:"Commands",id:"commands",children:[{value:"Imperative",id:"imperative",children:[],level:3},{value:"Declarative",id:"declarative",children:[],level:3}],level:2},{value:"Examples",id:"examples",children:[],level:2},{value:"Example 1",id:"example-1",children:[],level:2}],p={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,l.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"pods"},"Pods"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Basic building blocks"),(0,l.kt)("li",{parentName:"ul"},"One or more containers"),(0,l.kt)("li",{parentName:"ul"},"All pods share a container networks"),(0,l.kt)("li",{parentName:"ul"},"One IP address per pod")),(0,l.kt)("h2",{id:"declaration"},"Declaration"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Container image"),(0,l.kt)("li",{parentName:"ul"},"Container ports"),(0,l.kt)("li",{parentName:"ul"},"Restart policy"),(0,l.kt)("li",{parentName:"ul"},"Resource limits")),(0,l.kt)("h2",{id:"benefits"},"Benefits"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Source control"),(0,l.kt)("li",{parentName:"ul"},"Easy to share"),(0,l.kt)("li",{parentName:"ul"},"Easy to work with")),(0,l.kt)("h2",{id:"create"},"Create"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"kubectl create")," send manifest to API server"),(0,l.kt)("li",{parentName:"ul"},"Actions",(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},"Select a node with sufficient resources"),(0,l.kt)("li",{parentName:"ol"},"Schedule pod onto node"),(0,l.kt)("li",{parentName:"ol"},"Node pulls Pod's container image"),(0,l.kt)("li",{parentName:"ol"},"Starts Pod's containers")))),(0,l.kt)("h2",{id:"commands"},"Commands"),(0,l.kt)("h3",{id:"imperative"},"Imperative"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Create file\nkubectl create -f <file_name>\n\n# List all pods\nkubectl get pods\n\n# Get pod information\nkubectl describe pod <pod_name>\n\n# Delete pod\nkubectl delete pod <pod_name>\n")),(0,l.kt)("h3",{id:"declarative"},"Declarative"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f <file_name>\n")),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)("h2",{id:"example-1"},"Example 1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="mypod.yaml"',title:'"mypod.yaml"'},'apiVersion: v1\nkind: Pod\nmetadata:\n  name: mypod\n  labels:\n    app: webserver\nspec:\n  containers:\n  - name: mycontainer\n    image: nginx:latest\n    ports:\n    - containerPort: 80\n    resources:\n      requests:\n        memory: "128Mi" # 128Mi = 128 mebibytes\n        cpu: "500m" # 500m = 500 milliCPUs (1/2 CPU)\n      limits:\n        memory: "128Mi"\n        cpu: "500m"\n')))}m.isMDXComponent=!0}}]);