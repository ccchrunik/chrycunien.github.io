(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4539],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(f,l(l({ref:t},c),{},{components:n})):r.createElement(f,l({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7063:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return m}});var r=n(4034),a=n(9973),o=(n(7294),n(3905)),l=["components"],i={},s="Custom Resources",p={unversionedId:"Submarine/Code/Sample-Controller/CR",id:"Submarine/Code/Sample-Controller/CR",isDocsHomePage:!1,title:"Custom Resources",description:"Steps to create a custom resources",source:"@site/docs/Submarine/Code/Sample-Controller/CR.md",sourceDirName:"Submarine/Code/Sample-Controller",slug:"/Submarine/Code/Sample-Controller/CR",permalink:"/docs/Submarine/Code/Sample-Controller/CR",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Operator",permalink:"/docs/Submarine/Setup/Operator"},next:{title:"Controller",permalink:"/docs/Submarine/Code/Sample-Controller/Controller"}},c=[{value:"CRD",id:"crd",children:[{value:"Fields Explanation",id:"fields-explanation",children:[],level:3},{value:"Examples",id:"examples",children:[],level:3}],level:2},{value:"CR",id:"cr",children:[{value:"Fields Explanation",id:"fields-explanation-1",children:[],level:3},{value:"Examples",id:"examples-1",children:[],level:3}],level:2},{value:"References",id:"references",children:[],level:2}],u={toc:c};function m(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"custom-resources"},"Custom Resources"),(0,o.kt)("p",null,"Steps to create a custom resources"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create a CRD (custom resource definition)"),(0,o.kt)("li",{parentName:"ol"},"Create a CR"),(0,o.kt)("li",{parentName:"ol"},"Write a controller to control this CR")),(0,o.kt)("p",null,"In this page, we only introduct CRD and CR."),(0,o.kt)("h2",{id:"crd"},"CRD"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"CRD"),": custom resource definition"),(0,o.kt)("li",{parentName:"ul"},"Before we create a CR, we need to create a CRD first because at this moment Kubernetes didn't know what your CR looks like. By creating a CRD, Kubernetes knows there is a new type and can create a new object for you later.")),(0,o.kt)("h3",{id:"fields-explanation"},"Fields Explanation"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"metadata.name"),": it must be ",(0,o.kt)("inlineCode",{parentName:"li"},"spec.name.plural")," + ",(0,o.kt)("inlineCode",{parentName:"li"},"metadata.name")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"spec.group"),": the API group name of your cr"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"spec.versions"),": the list of versions the cr supports "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"spec.versions.[*].schema"),": the restriction (validation) of fields of cr (see Client-Go code explanation)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"spec.names"),": the type (kind) that will be used to create a cr"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"spec.versions.[*].subresources"),": allow api server to request for subresources like ",(0,o.kt)("inlineCode",{parentName:"li"},"/status")," (see Client-Go code explanation)")),(0,o.kt)("h3",{id:"examples"},"Examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="crd.yaml"',title:'"crd.yaml"'},'apiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  name: foos.samplecontroller.k8s.io\n  # for more information on the below annotation, please see\n  # https://github.com/kubernetes/enhancements/blob/master/keps/sig-api-machinery/2337-k8s.io-group-protection/README.md\n  annotations:\n    "api-approved.kubernetes.io": "unapproved, experimental-only; please get an approval from Kubernetes API reviewers if you\'re trying to develop a CRD in the *.k8s.io or *.kubernetes.io groups"\nspec:\n  group: samplecontroller.k8s.io\n  versions:\n    - name: v1alpha1\n      served: true\n      storage: true\n      schema:\n        # schema used for validation\n        openAPIV3Schema:\n          type: object\n          properties:\n            spec:\n              type: object\n              properties:\n                deploymentName:\n                  type: string\n                replicas:\n                  type: integer\n                  minimum: 1\n                  maximum: 10\n            status:\n              type: object\n              properties:\n                availableReplicas:\n                  type: integer\n      # subresources for the custom resource\n      subresources:\n        # enables the status subresource\n        status: {}\n  names:\n    kind: Foo\n    plural: foos\n  scope: Namespaced\n')),(0,o.kt)("h2",{id:"cr"},"CR"),(0,o.kt)("p",null,"A CR is a resource that you actually want to create"),(0,o.kt)("h3",{id:"fields-explanation-1"},"Fields Explanation"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"apiVersions"),": specify the api group and version of the cr you want to use"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"kind"),": the same as ",(0,o.kt)("inlineCode",{parentName:"li"},"spec.names.kind")," in the crd"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"spec"),": you have to specify those defined in ",(0,o.kt)("inlineCode",{parentName:"li"},"spec.versions.[*].schema")," in the crd")),(0,o.kt)("h3",{id:"examples-1"},"Examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="example.yaml"',title:'"example.yaml"'},"apiVersion: samplecontroller.k8s.io/v1alpha1\nkind: Foo\nmetadata:\n  name: example-foo\nspec:\n  deploymentName: example-foo\n  replicas: 1\n")),(0,o.kt)("h2",{id:"references"},"References"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/kubernetes/sample-controller/"},"https://github.com/kubernetes/sample-controller/"))))}m.isMDXComponent=!0}}]);