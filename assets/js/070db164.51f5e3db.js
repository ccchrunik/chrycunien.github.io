(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4726],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(n),d=l,k=p["".concat(s,".").concat(d)]||p[d]||m[d]||a;return n?r.createElement(k,i(i({ref:t},c),{},{components:n})):r.createElement(k,i({ref:t},c))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,i=new Array(a);i[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8893:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return p}});var r=n(4034),l=n(9973),a=(n(7294),n(3905)),i=["components"],o={},s="Dimensions of SDN Applications",u={unversionedId:"System/Network/Virtualization/SDN/SDN-Dimensions",id:"System/Network/Virtualization/SDN/SDN-Dimensions",isDocsHomePage:!1,title:"Dimensions of SDN Applications",description:"- TCAM = Ternary Content-addressable memory",source:"@site/docs/System/Network/Virtualization/SDN/SDN-Dimensions.md",sourceDirName:"System/Network/Virtualization/SDN",slug:"/System/Network/Virtualization/SDN/SDN-Dimensions",permalink:"/docs/System/Network/Virtualization/SDN/SDN-Dimensions",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Network Review",permalink:"/docs/System/Network/Virtualization/SDN/Network-Review"},next:{title:"OpenFlow",permalink:"/docs/System/Network/Virtualization/SDN/SDN-OpenFlow"}},c=[{value:"Rules Installation",id:"rules-installation",children:[{value:"Proactive Rules",id:"proactive-rules",children:[],level:3},{value:"Reactive Rules",id:"reactive-rules",children:[],level:3}],level:2},{value:"Granularity of Rules",id:"granularity-of-rules",children:[{value:"Microflow",id:"microflow",children:[],level:3},{value:"WildCards",id:"wildcards",children:[],level:3}],level:2},{value:"Architecture",id:"architecture",children:[{value:"Distributed",id:"distributed",children:[],level:3},{value:"Centralized",id:"centralized",children:[],level:3}],level:2},{value:"Security",id:"security",children:[{value:"Data Plane Limitations",id:"data-plane-limitations",children:[],level:3},{value:"Debugging SDN",id:"debugging-sdn",children:[],level:3},{value:"Attacks",id:"attacks",children:[],level:3}],level:2},{value:"References",id:"references",children:[],level:2}],m={toc:c};function p(e){var t=e.components,o=(0,l.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},m,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"dimensions-of-sdn-applications"},"Dimensions of SDN Applications"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"TCAM = Ternary Content-addressable memory"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"CAM"),": 2 states match (0, 1)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"RCAM"),": 3 states match (0, 1, X (don't care))")),(0,a.kt)("h2",{id:"rules-installation"},"Rules Installation"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"OpenFlow switch use ",(0,a.kt)("strong",{parentName:"li"},"CAM")," or ",(0,a.kt)("strong",{parentName:"li"},"TCAM")," to store table entries, which has limited capacity, usually thousands of entries."),(0,a.kt)("li",{parentName:"ul"},"Choose different rules in terms of traffic patters. You can also use hybrid mode, and adjust the proportion according to network conditions.")),(0,a.kt)("h3",{id:"proactive-rules"},"Proactive Rules"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Controller pre-installs flow table entries --\x3e Zero flow setup time"),(0,a.kt)("li",{parentName:"ul"},"Requires installation of rules for all possible traffic patterns",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Requires use of aggregate rules (Wildcards *)"),(0,a.kt)("li",{parentName:"ul"},"Require foreknowledge of traffic patterns"),(0,a.kt)("li",{parentName:"ul"},"Waste flow table entries")))),(0,a.kt)("h3",{id:"reactive-rules"},"Reactive Rules"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"First packet of each flow triggers rule insertion by the controller ",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Each flow incurs flow setup time (Only 1 RTT per flow)"),(0,a.kt)("li",{parentName:"ul"},"Controller is bottleneck (because you may have only 1 instance of controller)"),(0,a.kt)("li",{parentName:"ul"},"Efficient use of flow tables")))),(0,a.kt)("h2",{id:"granularity-of-rules"},"Granularity of Rules"),(0,a.kt)("h3",{id:"microflow"},"Microflow"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Also called exact match rules"),(0,a.kt)("li",{parentName:"ul"},"One flow table matches one flow"),(0,a.kt)("li",{parentName:"ul"},"Uses CAM/hash-table --\x3e 10-20K per physical switch"),(0,a.kt)("li",{parentName:"ul"},"Allows precisions",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Monitoring: gives counters for individual flows"),(0,a.kt)("li",{parentName:"ul"},"Access-Control: allow/deny individual flows"),(0,a.kt)("li",{parentName:"ul"},"Ex: IP, port, ...")))),(0,a.kt)("h3",{id:"wildcards"},"WildCards"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Also called aggregated rules"),(0,a.kt)("li",{parentName:"ul"},"One flow table entry matches a group of flow"),(0,a.kt)("li",{parentName:"ul"},"Uses TCAM --\x3e 5000~4K per physical switch"),(0,a.kt)("li",{parentName:"ul"},"Allows scale",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Minimizes overhead by grouping flows")))),(0,a.kt)("h2",{id:"architecture"},"Architecture"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Eastbound API")," or ",(0,a.kt)("strong",{parentName:"li"},"Westbound API"),": communicate between distributed controllers")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"sdn-dimension-arch",src:n(738).Z})),(0,a.kt)("h3",{id:"distributed"},"Distributed"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Availability",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"How many controllers?"),(0,a.kt)("li",{parentName:"ul"},"How do you assign switches to controllers?"),(0,a.kt)("li",{parentName:"ul"},"More importantly: which assignment reduces processing time"),(0,a.kt)("li",{parentName:"ul"},"How to ensure consistency between controllers"))),(0,a.kt)("li",{parentName:"ul"},"Reliability/Fault Tolerance",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"(Traditional) Existing network survives failures or bugs in code for any one devices"),(0,a.kt)("li",{parentName:"ul"},"(SDN) Controller: Single point of control. Bug in controller takes the whole network down"))),(0,a.kt)("li",{parentName:"ul"},"Security",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"(Traditional) If one device in the current networks are compromised the network may still be safe"),(0,a.kt)("li",{parentName:"ul"},"(SDN) Controller: Single point of control. Denial of Service attack the control channel")))),(0,a.kt)("h3",{id:"centralized"},"Centralized"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"A distinct (typically remote) controller interacts with local control agents (CAs)")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"sdn-centralized",src:n(3226).Z})),(0,a.kt)("h2",{id:"security"},"Security"),(0,a.kt)("h3",{id:"data-plane-limitations"},"Data Plane Limitations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Limited Number of TCAM entries",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Currently only 1K (networks have more than 1K flow)"),(0,a.kt)("li",{parentName:"ul"},"How to fit network in limited entries?"))),(0,a.kt)("li",{parentName:"ul"},"Limited control channel capacity",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"All switches use same controller interface"),(0,a.kt)("li",{parentName:"ul"},"Need to rate-limit control messages"),(0,a.kt)("li",{parentName:"ul"},"Prioritize certain messages"),(0,a.kt)("li",{parentName:"ul"},"Limited bandwidth, the controller may be congested and control messages can be dropped"))),(0,a.kt)("li",{parentName:"ul"},"Limited switch CPU",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Less power than a smartphone"),(0,a.kt)("li",{parentName:"ul"},"Limit control messages and actions that use CPU"),(0,a.kt)("li",{parentName:"ul"},"Switchs use CPU like send control messages or perform actions")))),(0,a.kt)("h3",{id:"debugging-sdn"},"Debugging SDN"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Buggy App, Network OS, Switch, Hardware, ..."),(0,a.kt)("li",{parentName:"ul"},"In tradition, the router is made by a single manufacturer, and mostly well-tested. However, in SDN, components are produced by several vendors, which may lead to  some bugs that have not been found"),(0,a.kt)("li",{parentName:"ul"},"Some engineer may produce a bug that cause the entire network to crash, which results from the complexity of SDN")),(0,a.kt)("h3",{id:"attacks"},"Attacks"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Man in the Middle",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Adversaries can pollute the network topology by sending fake messages about the neighbors or even impersonate a switch to forge a fake topology. (Because you can easily modify a field using raw socket)"),(0,a.kt)("li",{parentName:"ul"},"And it can do other things like get more information by adding some non-existing host."))),(0,a.kt)("li",{parentName:"ul"},"Redirection",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"The adversary can make some traffic redirect to its own machine, and get some information, like web request (fishing website)"),(0,a.kt)("li",{parentName:"ul"},"You even do not need to access control plane and you are likely to launch attacks")))),(0,a.kt)("h2",{id:"references"},"References"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"This note is based on NTU course - ",(0,a.kt)("a",{parentName:"li",href:"https://nol.ntu.edu.tw/nol/coursesearch/print_table.php?course_id=942%20U0710&class=&dpt_code=9420&ser_no=50698&semester=110-1&lang=CH"},"Network Virtualization and Security"))))}p.isMDXComponent=!0},3226:function(e,t,n){"use strict";t.Z=n.p+"assets/images/sdn-centralized-f9006ad2450947463e70e4959516c531.png"},738:function(e,t,n){"use strict";t.Z=n.p+"assets/images/sdn-dimension-arch-7f195a3845dde5733ebff0c4361dae7e.png"}}]);