(self.webpackChunkyingchiaochen_website=self.webpackChunkyingchiaochen_website||[]).push([[1500],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(n),d=r,h=p["".concat(s,".").concat(d)]||p[d]||m[d]||i;return n?a.createElement(h,l(l({ref:t},u),{},{components:n})):a.createElement(h,l({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3859:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var a=n(4034),r=n(9973),i=(n(7294),n(3905)),l=["components"],o={},s="Special",c={unversionedId:"Linux/Script/Variables/Special",id:"Linux/Script/Variables/Special",isDocsHomePage:!1,title:"Special",description:"Exit Status",source:"@site/docs/Linux/Script/Variables/Special.md",sourceDirName:"Linux/Script/Variables",slug:"/Linux/Script/Variables/Special",permalink:"/docs/Linux/Script/Variables/Special",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Path",permalink:"/docs/Linux/Script/Variables/Path"},next:{title:"Variables",permalink:"/docs/Linux/Script/Variables/Variables"}},u=[{value:"Exit Status",id:"exit-status",children:[{value:"Example",id:"example",children:[],level:3}],level:2},{value:"Command Line Arguments",id:"command-line-arguments",children:[{value:"Special Variables",id:"special-variables",children:[],level:3},{value:"Example",id:"example-1",children:[],level:3}],level:2},{value:"Misc",id:"misc",children:[{value:"Previous command",id:"previous-command",children:[],level:3},{value:"Command Substitution",id:"command-substitution",children:[],level:3}],level:2},{value:"References",id:"references",children:[],level:2}],m={toc:u};function p(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"special"},"Special"),(0,i.kt)("h2",{id:"exit-status"},"Exit Status"),(0,i.kt)("p",null,"The exit status of the previous command will be stored in this variable: ",(0,i.kt)("inlineCode",{parentName:"p"},"?"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'$ echo "${?}"\n')),(0,i.kt)("h3",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'# Only display if the UID does NOT match 1000.\nUID_TO_TEST_FOR=\'1000\'\nif [[ "${UID}" -ne "${UID_TO_TEST_FOR}" ]]\nthen\n  echo "Your UID does not match ${UID_TO_TEST_FOR}."\n  exit 1\nfi\n\n# Test if the command succeeded.\nif [[ "${?}" -ne 0 ]]\nthen\n  echo \'The id command did not execute successfully.\'\n  exit 1\nfi\necho "Your username is ${USER_NAME}"\n\n# Explicitly declare exit status as 0\n# Else the exit status will be the previous command exit status\n# Why? for example, you execute a command, but it will not fail but only set the exit status\n# To limit the scope of this script, by adding `exit 0`, once the result is not disastrout, it will \n# the exist status to 0.\nexit 0\n')),(0,i.kt)("h2",{id:"command-line-arguments"},"Command Line Arguments"),(0,i.kt)("h3",{id:"special-variables"},"Special Variables"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"${0}"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"${1}"),", ...: command-line arguments"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"${#}"),": the number of arguments"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"${@}"),": a list of positional arguments except for ",(0,i.kt)("inlineCode",{parentName:"li"},"${0}"),", evaluates to ","[",(0,i.kt)("inlineCode",{parentName:"li"},"${1}"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"${2}"),", ...]"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"${*}"),": nearly the same as ",(0,i.kt)("inlineCode",{parentName:"li"},"${@}"),', but separated by a space, "$1c$2c"'),(0,i.kt)("li",{parentName:"ul"},"Use ",(0,i.kt)("inlineCode",{parentName:"li"},"man bash")," and search for ",(0,i.kt)("inlineCode",{parentName:"li"},"Special Paramters")," for more information.")),(0,i.kt)("h3",{id:"example-1"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'#!/bin/bash\n\n# This script generates a random password for each user specified on the comand line.\n\n# Display what the user typed on the command line.\necho "You executed this command: ${0}"\n\n# Display the path and filename of the script.\necho "You used $(dirname ${0}) as the path to the $(basename ${0}) script."\n\n# Tell them how many arguments they passed in.\n# (Inside the script they are parameters, outside they are arguments.)\nNUMBER_OF_PARAMETERS="${#}"\necho "You supplied ${NUMBER_OF_PARAMETERS} argument(s) on the command line."\n\n# Make sure they at least supply one argument.\nif [[ "${NUMBER_OF_PARAMETERS}" -lt 1 ]]\nthen\n  echo "Usage: ${0} USER_NAME [USER_NAME]..."\n  exit 1\nfi\n\n# Generate and display a password for each parameter.\nfor USER_NAME in "${@}"\ndo\n  PASSWORD=$(date +%s%N | sha256sum | head -c48)\n  echo "${USER_NAME}: ${PASSWORD}"\ndone\n')),(0,i.kt)("h2",{id:"misc"},"Misc"),(0,i.kt)("h3",{id:"previous-command"},"Previous command"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"!"),": Adding this character before a partial command will execute the most recent command with the prefix specified")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# Some commands\n$ vim test.sh\n$ ./test.sh\n\n# Execute the most recent command that start with v \n# -> vim test.sh\n$ !v\n\n# Execute the most recent command that start with\n# -> ./test.sh\n$ !./\n")),(0,i.kt)("h3",{id:"command-substitution"},"Command Substitution"),(0,i.kt)("p",null,"You can use ",(0,i.kt)("inlineCode",{parentName:"p"},"$()")," to enclose a command, and the result can be assigned to another variable."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'USER_NAME=$(id -un)\necho "${USER_NAME}"\n')),(0,i.kt)("h2",{id:"references"},"References"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://cloudacademy.com/course/shell-scripting-user-account-creation-1517/"},"https://cloudacademy.com/course/shell-scripting-user-account-creation-1517/")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://cloudacademy.com/course/password-generation-shell-script-arguments-1518"},"https://cloudacademy.com/course/password-generation-shell-script-arguments-1518"))))}p.isMDXComponent=!0}}]);