(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9801],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return u},kt:function(){return h}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},b=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),b=c(t),h=a,m=b["".concat(s,".").concat(h)]||b[h]||p[h]||i;return t?r.createElement(m,l(l({ref:n},u),{},{components:t})):r.createElement(m,l({ref:n},u))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=b;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}b.displayName="MDXCreateElement"},7057:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return b}});var r=t(2122),a=t(9756),i=(t(7294),t(3905)),l=["components"],o={},s="Variables",c={unversionedId:"Linux/Script/Variables",id:"Linux/Script/Variables",isDocsHomePage:!1,title:"Variables",description:"There are two ways to set an variables in bash: shell variable and environment variable.",source:"@site/docs/Linux/Script/Variables.md",sourceDirName:"Linux/Script",slug:"/Linux/Script/Variables",permalink:"/docs/Linux/Script/Variables",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"User Input",permalink:"/docs/Linux/Script/User-Input"},next:{title:"Summer Plan",permalink:"/docs/Plans/2021/summer-plan"}},u=[{value:"Display variables",id:"display-variables",children:[]},{value:"Full script",id:"full-script",children:[]},{value:"References",id:"references",children:[]}],p={toc:u};function b(e){var n=e.components,t=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"variables"},"Variables"),(0,i.kt)("p",null,"There are two ways to set an variables in bash: shell variable and environment variable."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"shell variable: variables for the current chell, usually store temporary variable or condition (if, for) variables."),(0,i.kt)("li",{parentName:"ul"},"environment variable: this variable will pass values to all its child.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# Note: \"\" will expand variables and '' will not.\n\n# Set shell variable\nUSER_NAME='Eric'\n\n# Set environment variable\nexport USER_NAME\nexport TEST_NAME='Mike'\n")),(0,i.kt)("h2",{id:"display-variables"},"Display variables"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'USER_NAME=\'Eric\'\n\n# OR `echo "$USER_NAME"`\necho "${USER_NAME}"\necho "The username is ${USER_NAME}."\n')),(0,i.kt)("h2",{id:"full-script"},"Full script"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'#!/bin/bash\n\n# This script displays various information to the screen.\n\n# Display \'Hello\'\necho \'Hello\'\n\n# Assign a value to a variable.\nWORD=\'script\'\n\n# Display that value using the variable.\necho "$WORD"\n\n# Demonstrate that single quotes cause variables to not get expanded.\necho \'$WORD\'\n\n# Combine the variable with hard-coded text.\necho "This is a shell $WORD"\n\n# Display the contents of the variable using an alternative syntax.\necho "This is a shell ${WORD}"\n\n# Append text to the variable.\necho "${WORD}ing is fun!"\n\n# Show how NOT to append text to a variable.\n# This doesn\'t work:\necho "$WORDing is fun!"\n\n# Create a new variable\nENDING=\'ed\'\n\n# Combine the two variables.\necho "This is ${WORD}${ENDING}."\n\n# Change the value stored in the ENDING variable.  (Reassignment.)\nENDING=\'ing\'\necho "${WORD}${ENDING} is fun!"\n\n# Reassign value to ENDING.\nENDING=\'s\'\necho "You are going to write many ${WORD}${ENDING} in this class!"\n')),(0,i.kt)("h2",{id:"references"},"References"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.baeldung.com/linux/bash-variables-export"},"https://www.baeldung.com/linux/bash-variables-export")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://cloudacademy.com/course/shell-scripting-user-account-creation-1517/"},"https://cloudacademy.com/course/shell-scripting-user-account-creation-1517/"))))}b.isMDXComponent=!0}}]);