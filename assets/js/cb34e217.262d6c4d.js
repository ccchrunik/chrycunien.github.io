(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8527],{3905:function(n,e,t){"use strict";t.d(e,{Zo:function(){return u},kt:function(){return v}});var r=t(7294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var c=r.createContext({}),s=function(n){var e=r.useContext(c),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},u=function(n){var e=s(n.components);return r.createElement(c.Provider,{value:e},n.children)},m={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},p=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,o=n.originalType,c=n.parentName,u=l(n,["components","mdxType","originalType","parentName"]),p=s(t),v=a,g=p["".concat(c,".").concat(v)]||p[v]||m[v]||o;return t?r.createElement(g,i(i({ref:e},u),{},{components:t})):r.createElement(g,i({ref:e},u))}));function v(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var o=t.length,i=new Array(o);i[0]=p;var l={};for(var c in e)hasOwnProperty.call(e,c)&&(l[c]=e[c]);l.originalType=n,l.mdxType="string"==typeof n?n:a,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},1818:function(n,e,t){"use strict";t.r(e),t.d(e,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return p}});var r=t(4034),a=t(9973),o=(t(7294),t(3905)),i=["components"],l={},c="Vagrant",s={unversionedId:"Tools/Vagrant/Setup",id:"Tools/Vagrant/Setup",isDocsHomePage:!1,title:"Vagrant",description:"Installation",source:"@site/docs/Tools/Vagrant/Setup.md",sourceDirName:"Tools/Vagrant",slug:"/Tools/Vagrant/Setup",permalink:"/docs/Tools/Vagrant/Setup",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Commands",permalink:"/docs/Tools/Vagrant/Commands"},next:{title:"Vim Setup",permalink:"/docs/Tools/Vim/Setup"}},u=[{value:"Installation",id:"installation",children:[],level:2},{value:"Commands",id:"commands",children:[],level:2},{value:"Vagrant file",id:"vagrant-file",children:[],level:2}],m={toc:u};function p(n){var e=n.components,t=(0,a.Z)(n,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"vagrant"},"Vagrant"),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ brew install vagrant\n")),(0,o.kt)("h2",{id:"commands"},"Commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# Download vagrant box image\n$ vagrant add box <user>/<box>\n$ vagrant add box jasonc/centos7\n\n# Initialize vagrant\n$ mkdir vm1\n$ cd vm1\n$ vagrant init jasonc/centos7\n\n# Start the virtual machine\n$ vagrant up <vm_name>\n# Start all vm defined in the vagrant file\n$ vagrant up\n\n# Connect to virtual machines\n$ vagrant ssh <vm_name>\n# If you only have 1 vm\n$ vagrant ssh \n\n# Some other operations\n$ vagrant halt <vm_name>\n$ vagrant suspend <vm_name>\n$ vagrant resume <vm_name>\n$ vagrant destory <vm_name>\n\n# List options\n$ vagrant\n")),(0,o.kt)("h2",{id:"vagrant-file"},"Vagrant file"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The basic configuration:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vagrant"},'Vagrant.configure("2") do |config|\n  config.vm.box = "jasonc/centos7"\n  config.vm.hostname = "linuxsvr1"\n  config.vm.network "private_network", ip: "10.2.3.4"\n  config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"\n  config.vm.provider "virtualbox" do |vb|\n    vb.gui = true\n    vb.memory = "1024"\n  end\n  config.vm.provision "shell", path: "setup.sh"\nend\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Multiple vm")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vagrant"},'Vagrant.configure("2") do |config|\n  config.vm.box = "jasonc/centos7"\n  \n  # The `do` is actually specify the vm entity you want to setup\n  config.vm.define "server1" do |server1|\n    server1.vm.hostname = "server1"\n    config.vm.network "private_network", ip: "10.2.3.4"\n  end\n\n  config.vm.define "server2" do |server2|\n    server2.vm.hostname = "server2"\n    config.vm.network "private_network", ip: "10.2.3.5"\n  end\nend\n')))}p.isMDXComponent=!0}}]);