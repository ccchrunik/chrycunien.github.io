(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4599],{3905:function(e,n,r){"use strict";r.d(n,{Zo:function(){return s},kt:function(){return f}});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=t.createContext({}),u=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},s=function(e){var n=u(e.components);return t.createElement(c.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(r),f=o,d=p["".concat(c,".").concat(f)]||p[f]||m[f]||a;return r?t.createElement(d,i(i({ref:n},s),{},{components:r})):t.createElement(d,i({ref:n},s))}));function f(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=p;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=r[u];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},2857:function(e,n,r){"use strict";r.r(n),r.d(n,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return s},default:function(){return p}});var t=r(4034),o=r(9973),a=(r(7294),r(3905)),i=["components"],l={},c="Main",u={unversionedId:"Submarine/Code/Sample-Controller/Main",id:"Submarine/Code/Sample-Controller/Main",isDocsHomePage:!1,title:"Main",description:"This page document explanation for several parts in the main.go.",source:"@site/docs/Submarine/Code/Sample-Controller/Main.md",sourceDirName:"Submarine/Code/Sample-Controller",slug:"/Submarine/Code/Sample-Controller/Main",permalink:"/docs/Submarine/Code/Sample-Controller/Main",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Controller",permalink:"/docs/Submarine/Code/Sample-Controller/Controller"},next:{title:"PKG resources",permalink:"/docs/Submarine/Code/Sample-Controller/PKG"}},s=[{value:"Initialization",id:"initialization",children:[],level:2},{value:"Create Client",id:"create-client",children:[],level:2},{value:"Create Controller",id:"create-controller",children:[],level:2},{value:"References",id:"references",children:[],level:2}],m={toc:s};function p(e){var n=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,t.Z)({},m,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"main"},"Main"),(0,a.kt)("p",null,"This page document explanation for several parts in the ",(0,a.kt)("inlineCode",{parentName:"p"},"main.go"),"."),(0,a.kt)("h2",{id:"initialization"},"Initialization"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n    klog.InitFlags(nil)\n    flag.Parse()\n\n    // set up signals so we handle the first shutdown signal gracefully\n    stopCh := signals.SetupSignalHandler()\n\n    ...\n}\n\nfunc init() {\n    flag.StringVar(&kubeconfig, "kubeconfig", "", "Path to a kubeconfig. Only required if out-of-cluster.")\n    flag.StringVar(&masterURL, "master", "", "The address of the Kubernetes API server. Overrides any value in kubeconfig. Only required if out-of-cluster.")\n}\n')),(0,a.kt)("h2",{id:"create-client"},"Create Client"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"clientcmd")," takes the config path and load it from the specified URL and then return a config object"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"kubernetes.NewForConfig")," takes a config to create a client object to talk to default resources"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"clientset.NewForConfig")," takes a config to create a client object to talk to our custom resources"),(0,a.kt)("li",{parentName:"ul"},"The type after these clients are actuall ",(0,a.kt)("inlineCode",{parentName:"li"},"ClientSet")," because they are a set of client to communicate to several kubernetes resources like ",(0,a.kt)("inlineCode",{parentName:"li"},"deployment"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"pod"),", ...")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n    ...\n\n    cfg, err := clientcmd.BuildConfigFromFlags(masterURL, kubeconfig)\n    if err != nil {\n        klog.Fatalf("Error building kubeconfig: %s", err.Error())\n    }\n\n    kubeClient, err := kubernetes.NewForConfig(cfg)\n    if err != nil {\n        klog.Fatalf("Error building kubernetes clientset: %s", err.Error())\n    }\n\n    exampleClient, err := clientset.NewForConfig(cfg)\n    if err != nil {\n        klog.Fatalf("Error building example clientset: %s", err.Error())\n    }\n\n    ...\n}\n')),(0,a.kt)("h2",{id:"create-controller"},"Create Controller"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"kubeinformers.NewSharedInformerFactory")," creates informer factory that handles the creation of informers"),(0,a.kt)("li",{parentName:"ul"},"Why it is called ",(0,a.kt)("inlineCode",{parentName:"li"},"NewSharedInformerFactory")," is owing to the shared nature of informers. Imagine if you create a new informer for each single deployment, it is a waste. Therefore we create a single instance (maybe more than 1) of ",(0,a.kt)("strong",{parentName:"li"},"deployment")," informer that shared across all objects to handle all requests from the ",(0,a.kt)("inlineCode",{parentName:"li"},"deployment")," resource type.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n    ...\n\n    kubeInformerFactory := kubeinformers.NewSharedInformerFactory(kubeClient, time.Second*30)\n    exampleInformerFactory := informers.NewSharedInformerFactory(exampleClient, time.Second*30)\n\n    controller := NewController(kubeClient, exampleClient,\n        kubeInformerFactory.Apps().V1().Deployments(),\n        exampleInformerFactory.Samplecontroller().V1alpha1().Foos())\n\n    // notice that there is no need to run Start methods in a separate goroutine. (i.e. go kubeInformerFactory.Start(stopCh)\n    // Start method is non-blocking and runs all registered informers in a dedicated goroutine.\n    kubeInformerFactory.Start(stopCh)\n    exampleInformerFactory.Start(stopCh)\n\n    if err = controller.Run(2, stopCh); err != nil {\n        klog.Fatalf("Error running controller: %s", err.Error())\n    }\n}\n')),(0,a.kt)("h2",{id:"references"},"References"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/kubernetes/sample-controller/"},"https://github.com/kubernetes/sample-controller/"))))}p.isMDXComponent=!0}}]);