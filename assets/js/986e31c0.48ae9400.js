(self.webpackChunkyingchiaochen_website=self.webpackChunkyingchiaochen_website||[]).push([[1398],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return s},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=u(r),f=a,y=m["".concat(l,".").concat(f)]||m[f]||p[f]||o;return r?n.createElement(y,i(i({ref:t},s),{},{components:r})):n.createElement(y,i({ref:t},s))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3961:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return s},default:function(){return m}});var n=r(4034),a=r(9973),o=(r(7294),r(3905)),i=["components"],c={},l="Factory Pattern",u={unversionedId:"Programming/Design Pattern/Patterns/Factory/Overview",id:"Programming/Design Pattern/Patterns/Factory/Overview",isDocsHomePage:!1,title:"Factory Pattern",description:"Motivation",source:"@site/docs/Programming/Design Pattern/Patterns/Factory/Overview.md",sourceDirName:"Programming/Design Pattern/Patterns/Factory",slug:"/Programming/Design Pattern/Patterns/Factory/Overview",permalink:"/docs/Programming/Design Pattern/Patterns/Factory/Overview",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Go Factory Pattern",permalink:"/docs/Programming/Design Pattern/Patterns/Factory/Go"},next:{title:"Go Prototype Pattern",permalink:"/docs/Programming/Design Pattern/Patterns/Prototype/Go"}},s=[{value:"Motivation",id:"motivation",children:[],level:2},{value:"Goals",id:"goals",children:[],level:2},{value:"Factory Patterns",id:"factory-patterns",children:[{value:"Factory Function",id:"factory-function",children:[],level:3},{value:"Factory Generator",id:"factory-generator",children:[],level:3},{value:"Prototype Factory",id:"prototype-factory",children:[],level:3}],level:2},{value:"References",id:"references",children:[],level:2}],p={toc:s};function m(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"factory-pattern"},"Factory Pattern"),(0,o.kt)("h2",{id:"motivation"},"Motivation"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Object creation sometimes become too convoluted"),(0,o.kt)("li",{parentName:"ul"},"Struct has too many fields, need to initialize all correctly"),(0,o.kt)("li",{parentName:"ul"},"Wholesale object creation (non-piecewise, unlike Builder) can outsourced to a separate function ")),(0,o.kt)("h2",{id:"goals"},"Goals"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Factory: A component responsible solely for the wholesale creation of objects")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A factory function (constructor) is a helper function for making structs"),(0,o.kt)("li",{parentName:"ul"},"A factory is any entity that take care of object creation"),(0,o.kt)("li",{parentName:"ul"},"It can be a function or dedicated struct")),(0,o.kt)("h2",{id:"factory-patterns"},"Factory Patterns"),(0,o.kt)("h3",{id:"factory-function"},"Factory Function"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Factory function delegate the creation of an object"),(0,o.kt)("li",{parentName:"ul"},"It may take only part of the arguments and set others as default values"),(0,o.kt)("li",{parentName:"ul"},"You can add some validation before actually create an object"),(0,o.kt)("li",{parentName:"ul"},"Some factory will return an interface rather than the concrete type")),(0,o.kt)("h3",{id:"factory-generator"},"Factory Generator"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Functional Approach",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Return a function rather than a struct"),(0,o.kt)("li",{parentName:"ul"},"This is more recommended and easier to implement"),(0,o.kt)("li",{parentName:"ul"},"It uses closure in functional programming paradigm to achieve this"))),(0,o.kt)("li",{parentName:"ul"},"Structure Approach",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Return a type that is a struct"),(0,o.kt)("li",{parentName:"ul"},"Usually you will have to incorporate some helper interface for later use")))),(0,o.kt)("h3",{id:"prototype-factory"},"Prototype Factory"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Another use case for factory pattern is to construct pre-defined objects"),(0,o.kt)("li",{parentName:"ul"},"Given an argument and the factory will construct an object for you automatically")),(0,o.kt)("h2",{id:"references"},"References"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.udemy.com/course/design-patterns-go"},"https://www.udemy.com/course/design-patterns-go"))))}m.isMDXComponent=!0}}]);