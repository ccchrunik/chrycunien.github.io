(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2123],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=s(n),d=i,f=m["".concat(c,".").concat(d)]||m[d]||p[d]||a;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3618:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return m}});var r=n(2122),i=n(9756),a=(n(7294),n(3905)),o=["components"],l={},c="Syntax",s={unversionedId:"Linux/Script/Syntax",id:"Linux/Script/Syntax",isDocsHomePage:!1,title:"Syntax",description:"Loop",source:"@site/docs/Linux/Script/Syntax.md",sourceDirName:"Linux/Script",slug:"/Linux/Script/Syntax",permalink:"/docs/Linux/Script/Syntax",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/docs/Linux/Script/Overview"},next:{title:"User Input",permalink:"/docs/Linux/Script/User-Input"}},u=[{value:"Loop",id:"loop",children:[]},{value:"Exit Status",id:"exit-status",children:[{value:"Example",id:"example",children:[]}]},{value:"Misc",id:"misc",children:[{value:"Command result",id:"command-result",children:[]}]},{value:"References",id:"references",children:[]}],p={toc:u};function m(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"syntax"},"Syntax"),(0,a.kt)("h2",{id:"loop"},"Loop"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"if COMMANDS; then COMMANDS; [ elif COMMANDS; then COMMANDS; ]... [ else COMMANDS; ] fi")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"help if")," to see if syntax"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"test")," is a command to evaluate expression, which is also used in the ",(0,a.kt)("inlineCode",{parentName:"li"},"if")," command. Use ",(0,a.kt)("inlineCode",{parentName:"li"},"help test")," to see more information."),(0,a.kt)("li",{parentName:"ul"},"Besides ",(0,a.kt)("inlineCode",{parentName:"li"},"-eq"),", we also can use ",(0,a.kt)("inlineCode",{parentName:"li"},"-ne"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"-lt"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"-le"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"-gt"),", or ",(0,a.kt)("inlineCode",{parentName:"li"},"-ge"),"."),(0,a.kt)("li",{parentName:"ul"},"You can use ",(0,a.kt)("inlineCode",{parentName:"li"},";")," as a command delimeter, but using ",(0,a.kt)("inlineCode",{parentName:"li"},"\\n")," is more readable.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"#!/bin/bash\n\n# Display if the user is the root user or not.\n# [] is old syntax, [[]] is newer\n# Note that [[]] is specific to bash\nif [[ \"${UID}\" -eq 0 ]]\nthen\n  echo 'You are root.'\nelse\n  echo 'You are not root.'\nfi\n")),(0,a.kt)("h2",{id:"exit-status"},"Exit Status"),(0,a.kt)("p",null,"The exit status of the previous command will be stored in this variable: ",(0,a.kt)("inlineCode",{parentName:"p"},"?"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'$ echo "${?}"\n')),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'# Only display if the UID does NOT match 1000.\nUID_TO_TEST_FOR=\'1000\'\nif [[ "${UID}" -ne "${UID_TO_TEST_FOR}" ]]\nthen\n  echo "Your UID does not match ${UID_TO_TEST_FOR}."\n  exit 1\nfi\n\n# Test if the command succeeded.\nif [[ "${?}" -ne 0 ]]\nthen\n  echo \'The id command did not execute successfully.\'\n  exit 1\nfi\necho "Your username is ${USER_NAME}"\n\n# Explicitly declare exit status as 0\n# Else the exit status will be the previous command exit status\n# Why? for example, you execute a command, but it will not fail but only set the exit status\n# To limit the scope of this script, by adding `exit 0`, once the result is not disastrout, it will \n# the exist status to 0.\nexit 0\n')),(0,a.kt)("h2",{id:"misc"},"Misc"),(0,a.kt)("h3",{id:"command-result"},"Command result"),(0,a.kt)("p",null,"You can use ",(0,a.kt)("inlineCode",{parentName:"p"},"$()")," to enclose a command, and the result can be assigned to another variable."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'USER_NAME=$(id -un)\necho "${USER_NAME}"\n')),(0,a.kt)("h2",{id:"references"},"References"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://cloudacademy.com/course/shell-scripting-user-account-creation-1517/"},"https://cloudacademy.com/course/shell-scripting-user-account-creation-1517/"))))}m.isMDXComponent=!0}}]);