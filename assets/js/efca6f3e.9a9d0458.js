(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[188],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return s},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},s=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=u(t),m=o,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||a;return t?r.createElement(f,c(c({ref:n},s),{},{components:t})):r.createElement(f,c({ref:n},s))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,c=new Array(a);c[0]=p;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var u=2;u<a;u++)c[u]=t[u];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},780:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return s},default:function(){return p}});var r=t(2122),o=t(9756),a=(t(7294),t(3905)),c=["components"],i={},l="Sidecar Pattern",u={unversionedId:"Kubernetes/Advanced/Sidecar",id:"Kubernetes/Advanced/Sidecar",isDocsHomePage:!1,title:"Sidecar Pattern",description:"Fluentd is a famount log collector tool.",source:"@site/docs/Kubernetes/Advanced/Sidecar.md",sourceDirName:"Kubernetes/Advanced",slug:"/Kubernetes/Advanced/Sidecar",permalink:"/docs/Kubernetes/Advanced/Sidecar",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Service Account",permalink:"/docs/Kubernetes/Advanced/Service-Accounts"},next:{title:"Autoscaling",permalink:"/docs/Kubernetes/Basics/Autoscaling"}},s=[{value:"Source Code",id:"source-code",children:[]}],d={toc:s};function p(e){var n=e.components,t=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"sidecar-pattern"},"Sidecar Pattern"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Fluentd")," is a famount log collector tool."),(0,a.kt)("h2",{id:"source-code"},"Source Code"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'# Set up s3 bucket\ns3_bucket=$(aws s3api list-buckets --query "Buckets[].Name" --output table | grep logs | tr -d \\|)\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="fluentd-sidecar-config.yaml"',title:'"fluentd-sidecar-config.yaml"'},"apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: fluentd-config\ndata:\n  fluent.conf: |\n    # First log source (tailing a file at /var/log/1.log)\n    <source>\n      @type tail\n      format none\n      path /var/log/1.log\n      pos_file /var/log/1.log.pos\n      tag count.format1\n    </source>\n\n    # Second log source (tailing a file at /var/log/2.log)\n    <source>\n      @type tail\n      format none\n      path /var/log/2.log\n      pos_file /var/log/2.log.pos\n      tag count.format2\n    </source>\n\n    # S3 output configuration (Store files every minute in the bucket's logs/ folder)\n    <match **>\n      @type s3\n\n      s3_bucket $s3_bucket\n      s3_region us-west-2\n      path logs/\n      buffer_path /var/log/\n      store_as text\n      time_slice_format %Y%m%d%H%M\n      time_slice_wait 1m\n      \n      <instance_profile_credentials>\n      </instance_profile_credentials>\n    </match>\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="pod-counter.yaml"',title:'"pod-counter.yaml"'},'apiVersion: v1\nkind: Pod\nmetadata:\n  name: counter\nspec:\n  containers:\n  - name: count\n    image: busybox\n    command: ["/bin/sh", "-c"]\n    args:\n    - >\n      i=0;\n      while true;\n      do\n        # Write two log files along with the date and a counter\n        # every second\n        echo "$i: $(date)" >> /var/log/1.log;\n        echo "$(date) INFO $i" >> /var/log/2.log;\n        i=$((i+1));\n        sleep 1;\n      done\n    # Mount the log directory /var/log using a volume\n    volumeMounts:\n    - name: varlog\n      mountPath: /var/log\n  - name: count-agent\n    image: lrakai/fluentd-s3:latest\n    env:\n    - name: FLUENTD_ARGS\n      value: -c /fluentd/etc/fluent.conf\n    # Mount the log directory /var/log using a volume\n    # and the config file\n    volumeMounts:\n    - name: varlog\n      mountPath: /var/log\n    - name: config-volume\n      mountPath: /fluentd/etc\n  # Use host network to allow sidecar access to IAM instance profile credentials\n  hostNetwork: true\n  # Declare volumes for log directory and ConfigMap\n  volumes:\n  - name: varlog\n    emptyDir: {}\n  - name: config-volume\n    configMap:\n      name: fluentd-config\n')))}p.isMDXComponent=!0}}]);