(self.webpackChunkyingchiaochen_website=self.webpackChunkyingchiaochen_website||[]).push([[3039],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),f=c(t),m=i,d=f["".concat(s,".").concat(m)]||f[m]||p[m]||o;return t?r.createElement(d,a(a({ref:n},u),{},{components:t})):r.createElement(d,a({ref:n},u))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=f;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},8571:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return f}});var r=t(4034),i=t(9973),o=(t(7294),t(3905)),a=["components"],l={},s="Function",c={unversionedId:"Linux/Script/Syntax/Function",id:"Linux/Script/Syntax/Function",isDocsHomePage:!1,title:"Function",description:"- DRY principle: Don't repeast yourself",source:"@site/docs/Linux/Script/Syntax/Function.md",sourceDirName:"Linux/Script/Syntax",slug:"/Linux/Script/Syntax/Function",permalink:"/docs/Linux/Script/Syntax/Function",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Flags",permalink:"/docs/Linux/Script/Syntax/Flags"},next:{title:"IO flow",permalink:"/docs/Linux/Script/Syntax/IO"}},u=[{value:"Examples",id:"examples",children:[],level:2},{value:"References",id:"references",children:[],level:2}],p={toc:u};function f(e){var n=e.components,t=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"function"},"Function"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"DRY principle: Don't repeast yourself"),(0,o.kt)("li",{parentName:"ul"},"Functions help you organize the same bit of code in the same place so you can reuse it and it servers as a single update point"),(0,o.kt)("li",{parentName:"ul"},"The exit status of a function will be the exit status of the last command in the function (unless you use return explicitly)")),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"local")," keyword: to limit the scope of the variable to the function, the variable only exists in the function"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"readonly")," keyword: to prevent modification later"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"${@}"),": expands to positional arguments, starting from one"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"return")," keyword: return from the function"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"exit"),": exit the entire script"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cp -p"),": copy the file with its onwership, privilege, timestamp ... properties being preserved"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"logger -t"),": log to syslog with name as tag, in centos syslog = ",(0,o.kt)("inlineCode",{parentName:"li"},"/var/log/messages")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"date +%F-%N"),": Display Full date and Nanoseconds")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'#!/bin/bash\n\n# This script demonstrates the use of functions.\n\nlog() {\n  # This function sends a message to syslog and to standard output if VERBOSE is true.\n\n  local MESSAGE="${@}"\n  if [[ "${VERBOSE}" = \'true\' ]]\n  then\n    echo "${MESSAGE}"\n  fi\n  logger -t luser-demo10.sh "${MESSAGE}"\n}\n\nbackup_file() {\n  # This function creates a backup of a file.  Returns non-zero status on error.\n\n  local FILE="${1}"\n\n  # Make sure the file exists.\n  if [[ -f "${FILE}" ]]\n  then\n    # Create the file name that is easy to sort files by date\n    local BACKUP_FILE="/var/tmp/$(basename ${FILE}).$(date +%F-%N)"\n    log "Backing up ${FILE} to ${BACKUP_FILE}."\n\n    # The exit status of the function will be the exit status of the cp command.\n    cp -p ${FILE} ${BACKUP_FILE}\n  else\n    # The file does not exist, so return a non-zero exit status.\n    return 1\n  fi\n}\n\nreadonly VERBOSE=\'true\'\nlog \'Hello!\'\nlog \'This is fun!\'\n\nbackup_file /etc/passwd\n\n# Make a decision based on the exit status of the function.\n# Note this is for demonstration purposes.  You could have\n# put this functionality inside of the backup_file function.\nif [[ "${?}" -eq \'0\' ]]\nthen\n  log \'File backup succeeded!\'\nelse\n  log \'File backup failed!\'\n  exit 1\nfi\n')),(0,o.kt)("h2",{id:"references"},"References"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://cloudacademy.com/course/shell-scripting-parsing-command-line-options-1520"},"https://cloudacademy.com/course/shell-scripting-parsing-command-line-options-1520"))))}f.isMDXComponent=!0}}]);