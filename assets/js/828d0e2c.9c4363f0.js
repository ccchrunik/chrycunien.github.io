(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2124],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return u},kt:function(){return d}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),s=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=s(e.components);return a.createElement(c.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(t),d=r,h=p["".concat(c,".").concat(d)]||p[d]||m[d]||i;return t?a.createElement(h,o(o({ref:n},u),{},{components:t})):a.createElement(h,o({ref:n},u))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=p;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},511:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return p}});var a=t(2122),r=t(9756),i=(t(7294),t(3905)),o=["components"],l={},c="Generate Random Password",s={unversionedId:"Linux/Script/Project/Random",id:"Linux/Script/Project/Random",isDocsHomePage:!1,title:"Generate Random Password",description:"RANDOM varaible",source:"@site/docs/Linux/Script/Project/Random.md",sourceDirName:"Linux/Script/Project",slug:"/Linux/Script/Project/Random",permalink:"/docs/Linux/Script/Project/Random",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Create User",permalink:"/docs/Linux/Script/Project/Create-User"},next:{title:"User Input",permalink:"/docs/Linux/Script/Project/User-Input"}},u=[{value:"RANDOM varaible",id:"random-varaible",children:[]},{value:"Date command",id:"date-command",children:[]},{value:"Cryptographic checksum",id:"cryptographic-checksum",children:[]},{value:"Special Character",id:"special-character",children:[]},{value:"Full Script",id:"full-script",children:[]},{value:"References",id:"references",children:[]}],m={toc:u};function p(e){var n=e.components,t=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"generate-random-password"},"Generate Random Password"),(0,i.kt)("h2",{id:"random-varaible"},"RANDOM varaible"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"There is a ",(0,i.kt)("inlineCode",{parentName:"li"},"RANDOM")," environment variable in the shell."),(0,i.kt)("li",{parentName:"ul"},"Use ",(0,i.kt)("inlineCode",{parentName:"li"},"man bash")," and search for ",(0,i.kt)("inlineCode",{parentName:"li"},"RANDOM"),"."),(0,i.kt)("li",{parentName:"ul"},"It will generate a number between 0 and 32767 each time.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'$ echo "${RANDOM}"\n')),(0,i.kt)("h2",{id:"date-command"},"Date command"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Use ",(0,i.kt)("inlineCode",{parentName:"li"},"date")," as a source of randomness."),(0,i.kt)("li",{parentName:"ul"},"We we some format in ",(0,i.kt)("inlineCode",{parentName:"li"},"date")," to generate a number."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"%s"),": seconds since 1970-01-01 00:00:00 UTC (unix time or epoch time)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"%N"),": nanoseconds (000000000..999999999)"),(0,i.kt)("li",{parentName:"ul"},"Use ",(0,i.kt)("inlineCode",{parentName:"li"},"man date")," for more information.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'# You will get a random number showed in the following lines\n$ echo "$(date +%s%N)"\n# Result:\n# 1633418761738268201\n')),(0,i.kt)("h2",{id:"cryptographic-checksum"},"Cryptographic checksum"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Use cryptographic checksum ensure the integrity of your content."),(0,i.kt)("li",{parentName:"ul"},"There are several variations: ",(0,i.kt)("inlineCode",{parentName:"li"},"sha1sum"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"sha256sum"),", ..."),(0,i.kt)("li",{parentName:"ul"},"In some systems, there is a general ",(0,i.kt)("inlineCode",{parentName:"li"},"shasum")," command you can use."),(0,i.kt)("li",{parentName:"ul"},"You can find a list of checksum utilities by this command: ",(0,i.kt)("inlineCode",{parentName:"li"},"ls -l /usr/bin/*sum")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"head"),": output the first part of a file. "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-c")," stands for characters"),(0,i.kt)("li",{parentName:"ul"},"See ",(0,i.kt)("inlineCode",{parentName:"li"},"man head")," for more information.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'$ echo "$(date +%s%N | sha256sum | head -c32)"\n')),(0,i.kt)("h2",{id:"special-character"},"Special Character"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"fold")," command fold each input line to fit in specified width (because if it's hard to see if a line is too long)",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-w1"),": each line only contains 1 character"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"man fold")," for more information"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"shuf"),": generate random permutations of the input lines",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"man shuf")," for more information")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# Select a random special character in a set\n$ echo \"$(echo '!@#$%^&*()_-+=' | fold -w1 | shuf | head -c1)\"\n")),(0,i.kt)("h2",{id:"full-script"},"Full Script"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'#!/bin/bash\n\n# This script generates a list of random passwords.\n\n# A random number as a password.\nPASSWORD="${RANDOM}"\necho "${PASSWORD}"\n\n# Three random numbers together.\nPASSWORD="${RANDOM}${RANDOM}${RANDOM}"\necho "${PASSWORD}"\n\n# Use the current date/time as the basis for the password.\nPASSWORD=$(date +%s)\necho "${PASSWORD}"\n\n# Use nanoseconds to act as randomization.\nPASSWORD=$(date +%s%N)\necho "${PASSWORD}"\n\n# A better password.\nPASSWORD=$(date +%s%N | sha256sum | head -c32)\necho "${PASSWORD}"\n\n# An even better password.\nPASSWORD=$(date +%s%N${RANDOM}${RANDOM} | sha256sum | head -c48)\necho "${PASSWORD}"\n\n# Append a special character to the password.\nSPECIAL_CHARACTER=$(echo \'!@#$%^&*()_-+=\' | fold -w1 | shuf | head -c1)\necho "${PASSWORD}${SPECIAL_CHARACTER}"\n')),(0,i.kt)("h2",{id:"references"},"References"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://cloudacademy.com/course/password-generation-shell-script-arguments-1518"},"https://cloudacademy.com/course/password-generation-shell-script-arguments-1518"))))}p.isMDXComponent=!0}}]);