(self.webpackChunkyingchiaochen_website=self.webpackChunkyingchiaochen_website||[]).push([[6365],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return s},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(r),m=a,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return r?n.createElement(f,i(i({ref:t},s),{},{components:r})):n.createElement(f,i({ref:t},s))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},1224:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return s},default:function(){return p}});var n=r(4034),a=r(9973),o=(r(7294),r(3905)),i=["components"],l={},c="Overview",u={unversionedId:"Programming/Design Pattern/Patterns/Decorator/Overview",id:"Programming/Design Pattern/Patterns/Decorator/Overview",isDocsHomePage:!1,title:"Overview",description:"Motivation",source:"@site/docs/Programming/Design Pattern/Patterns/Decorator/Overview.md",sourceDirName:"Programming/Design Pattern/Patterns/Decorator",slug:"/Programming/Design Pattern/Patterns/Decorator/Overview",permalink:"/docs/Programming/Design Pattern/Patterns/Decorator/Overview",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Go Decorator Pattern",permalink:"/docs/Programming/Design Pattern/Patterns/Decorator/Go"},next:{title:"Facade",permalink:"/docs/Programming/Design Pattern/Patterns/Facade/Go"}},s=[{value:"Motivation",id:"motivation",children:[],level:2},{value:"Goals",id:"goals",children:[],level:2},{value:"Decorator Patterns",id:"decorator-patterns",children:[{value:"Aggregated Decorator",id:"aggregated-decorator",children:[],level:3},{value:"Embedded decorator",id:"embedded-decorator",children:[],level:3},{value:"Functional Decorator",id:"functional-decorator",children:[],level:3}],level:2},{value:"References",id:"references",children:[],level:2}],d={toc:s};function p(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"overview"},"Overview"),(0,o.kt)("h2",{id:"motivation"},"Motivation"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Want to augment object with additional functionalities"),(0,o.kt)("li",{parentName:"ul"},"Do not want to rewrite or alter existing object (OCP principle)"),(0,o.kt)("li",{parentName:"ul"},"Want to keep new functionality separate (SRP principle)"),(0,o.kt)("li",{parentName:"ul"},"Need to be able to interact with existing structures"),(0,o.kt)("li",{parentName:"ul"},"Solutions: embed the decorated object and provide additional functionalities")),(0,o.kt)("h2",{id:"goals"},"Goals"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Decorator: Facilitates the addition of behavior to individual objects through embedding")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Add utility fields and methods to augment the object's features"),(0,o.kt)("li",{parentName:"ul"},"Often used to emulate multiple inheritance")),(0,o.kt)("h2",{id:"decorator-patterns"},"Decorator Patterns"),(0,o.kt)("h3",{id:"aggregated-decorator"},"Aggregated Decorator"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"This type of decorator extends the functionality of a struct by embedding several structs to a new one"),(0,o.kt)("li",{parentName:"ul"},"It is easy to implement with the support of multiple inheritance"),(0,o.kt)("li",{parentName:"ul"},"In those languages that do not support multiple inheritance, you may have to define some interfaces and the new struct just proxy objects that satisfy that interface")),(0,o.kt)("h3",{id:"embedded-decorator"},"Embedded decorator"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"In this type of decorator, you usually use the inheritance features provides by your programming language"),(0,o.kt)("li",{parentName:"ul"},"By chaining decorators, you add additional functionalities step by step"),(0,o.kt)("li",{parentName:"ul"},"You need some interface feature in your language")),(0,o.kt)("h3",{id:"functional-decorator"},"Functional Decorator"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Besides using inheritance on struct, you can also apply this concepts to functions"),(0,o.kt)("li",{parentName:"ul"},"By defining a interface, all you need to do is to conform to that interface"),(0,o.kt)("li",{parentName:"ul"},"You pass a function as an argument, and return a closure that add some functionalities and  call that function"),(0,o.kt)("li",{parentName:"ul"},"As a result, you get an higher-order function with chain-like structure.")),(0,o.kt)("h2",{id:"references"},"References"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.udemy.com/course/design-patterns-go"},"https://www.udemy.com/course/design-patterns-go"))))}p.isMDXComponent=!0}}]);