(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[375],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,h=d["".concat(l,".").concat(m)]||d[m]||p[m]||i;return n?r.createElement(h,o(o({ref:t},c),{},{components:n})):r.createElement(h,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1555:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var r=n(4034),a=n(9973),i=(n(7294),n(3905)),o=["components"],s={},l="User Input",u={unversionedId:"Linux/Script/Project/User-Input",id:"Linux/Script/Project/User-Input",isDocsHomePage:!1,title:"User Input",description:"Prompt",source:"@site/docs/Linux/Script/Project/User-Input.md",sourceDirName:"Linux/Script/Project",slug:"/Linux/Script/Project/User-Input",permalink:"/docs/Linux/Script/Project/User-Input",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Generate Random Password",permalink:"/docs/Linux/Script/Project/Random"},next:{title:"Overview",permalink:"/docs/Linux/Script/Structure/Overview"}},c=[{value:"Prompt",id:"prompt",children:[],level:2},{value:"Create User",id:"create-user",children:[{value:"Convention",id:"convention",children:[],level:3},{value:"Configuration",id:"configuration",children:[],level:3}],level:2},{value:"Set user&#39;s password",id:"set-users-password",children:[],level:2},{value:"Run the script",id:"run-the-script",children:[],level:2},{value:"Check the user is created",id:"check-the-user-is-created",children:[],level:2},{value:"Switch to a new account",id:"switch-to-a-new-account",children:[],level:2},{value:"Full script",id:"full-script",children:[],level:2},{value:"References",id:"references",children:[],level:2}],p={toc:c};function d(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"user-input"},"User Input"),(0,i.kt)("h2",{id:"prompt"},"Prompt"),(0,i.kt)("p",null,"Prompt is a way to interactively get data from user."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Use ",(0,i.kt)("inlineCode",{parentName:"li"},"help read")," for more information"),(0,i.kt)("li",{parentName:"ul"},"Actually you can specify multiple variable you want to read")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ read -p 'Enter the username to create: ' USER_NAME\n\n# Read multiple variables at the same time\n# You have to put a space between each variable\n$ read -p \"TEST: \" var1 var2 var3\n# TEST: 1 2 3\n")),(0,i.kt)("h2",{id:"create-user"},"Create User"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-c")," --comment: It is generally a short description of the login, and is currently used as the field for the user's full name."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-m")," --create-home: Create the user's home directory if it does not exist. By default, if this option is not specified and CREATE_HOME is not enabled, no home directories are created."),(0,i.kt)("li",{parentName:"ul"},"Use ",(0,i.kt)("inlineCode",{parentName:"li"},"man useradd")," for more information")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'# By putting COMMENT in quote, it ensure that all comment will be seen as a single entity, not affected by characters like spaces.\n$ useradd -c "${COMMENT}" -m ${USER_NAME}\n')),(0,i.kt)("h3",{id:"convention"},"Convention"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"By covention, a username is less than 8 characters. So if your username is longer than that, it may not be fully displayed in some commands like ",(0,i.kt)("inlineCode",{parentName:"li"},"ps -ef")),(0,i.kt)("li",{parentName:"ul"},"Also, you cannot use some special characters just like you register in some website.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ sudo useradd dougstamper\n\n# Use login shell\n$ sudo su - dougstamper\n\n# Notice that the username is not fully displayed\n$ ps -ef\n# Result:\n# dougsta+ ...\n")),(0,i.kt)("h3",{id:"configuration"},"Configuration"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"You can see the ",(0,i.kt)("inlineCode",{parentName:"li"},"CONFIGURATION")," field in the man page to see some configs when creating a user."),(0,i.kt)("li",{parentName:"ul"},"The default config is stored in ",(0,i.kt)("inlineCode",{parentName:"li"},"/etc/login.defs"))),(0,i.kt)("h2",{id:"set-users-password"},"Set user's password"),(0,i.kt)("p",null,"A default scene for this is that an admin will set a default password and then a new user uses this default password and then change to a new password."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--stdin"),": Get data from standard input (pipe)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-e")," --expire: force user to change the password when they first login")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'# OR: `echo "${USER_NAME}:${PASSWORD}" | chpasswd`\n$ echo ${PASSWORD} | passwd --stdin ${USER_NAME}\n\n# Force password change on first login.\npasswd -e ${USER_NAME}\n')),(0,i.kt)("h2",{id:"run-the-script"},"Run the script"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Only root can creat a user.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ sudo ./create-user.sh\n")),(0,i.kt)("h2",{id:"check-the-user-is-created"},"Check the user is created"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ cat /etc/passwd\n# Or\n$ tail /etc/passwd\n")),(0,i.kt)("h2",{id:"switch-to-a-new-account"},"Switch to a new account"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"We are not using ",(0,i.kt)("inlineCode",{parentName:"li"},"sudo")," because vagrant is just a normal user, we can't trust it."),(0,i.kt)("li",{parentName:"ul"},"If you use ",(0,i.kt)("inlineCode",{parentName:"li"},"sudo")," to login, it will require no password"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-")," means login shell"),(0,i.kt)("li",{parentName:"ul"},"The first time you login this account, it will force you to change the password.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ su - jsmith\n")),(0,i.kt)("h2",{id:"full-script"},"Full script"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"#!/bin/bash\n\n# This script creates an account on the local system.\n# You will be prompted for the account name and password.\n\n# Ask for the user name.\nread -p 'Enter the username to create: ' USER_NAME\n\n# Ask for the real name.\nread -p 'Enter the name of the person who this account is for: ' COMMENT\n\n# Ask for the password.\nread -p 'Enter the password to use for the account: ' PASSWORD\n\n# Create the user.\nuseradd -c \"${COMMENT}\" -m ${USER_NAME}\n\n# Set the password for the user.\n# NOTE: You can also use the following command:\n#    echo \"${USER_NAME}:${PASSWORD}\" | chpasswd\necho ${PASSWORD} | passwd --stdin ${USER_NAME}\n\n# Force password change on first login.\npasswd -e ${USER_NAME}\n")),(0,i.kt)("h2",{id:"references"},"References"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://cloudacademy.com/course/shell-scripting-user-account-creation-1517/"},"https://cloudacademy.com/course/shell-scripting-user-account-creation-1517/"))))}d.isMDXComponent=!0}}]);