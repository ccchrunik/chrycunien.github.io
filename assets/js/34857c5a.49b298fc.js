(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8611],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return c},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(t),m=a,h=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return t?r.createElement(h,i(i({ref:n},c),{},{components:t})):r.createElement(h,i({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6433:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var r=t(2122),a=t(9756),o=(t(7294),t(3905)),i=["components"],s={},l="User Input",u={unversionedId:"Linux/Script/User-Input",id:"Linux/Script/User-Input",isDocsHomePage:!1,title:"User Input",description:"Prompt",source:"@site/docs/Linux/Script/User-Input.md",sourceDirName:"Linux/Script",slug:"/Linux/Script/User-Input",permalink:"/docs/Linux/Script/User-Input",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Syntax",permalink:"/docs/Linux/Script/Syntax"},next:{title:"Variables",permalink:"/docs/Linux/Script/Variables"}},c=[{value:"Prompt",id:"prompt",children:[]},{value:"Create User",id:"create-user",children:[{value:"Convention",id:"convention",children:[]},{value:"Configuration",id:"configuration",children:[]}]},{value:"Set user&#39;s password",id:"set-users-password",children:[]},{value:"Run the script",id:"run-the-script",children:[]},{value:"Switch to a new account",id:"switch-to-a-new-account",children:[]},{value:"Full script",id:"full-script",children:[]},{value:"Another example",id:"another-example",children:[]},{value:"References",id:"references",children:[]}],p={toc:c};function d(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"user-input"},"User Input"),(0,o.kt)("h2",{id:"prompt"},"Prompt"),(0,o.kt)("p",null,"Prompt is a way to interactively get data from user."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Use ",(0,o.kt)("inlineCode",{parentName:"li"},"help read")," for more information"),(0,o.kt)("li",{parentName:"ul"},"Actually you can specify multiple variable you want to read")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ read -p 'Enter the username to create: ' USER_NAME\n\n# Read multiple variables at the same time\n# You have to put a space between each variable\n$ read -p \"TEST: \" var1 var2 var3\n# TEST: 1 2 3\n")),(0,o.kt)("h2",{id:"create-user"},"Create User"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-c")," --comment: It is generally a short description of the login, and is currently used as the field for the user's full name."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-m")," --create-home: Create the user's home directory if it does not exist. By default, if this option is not specified and CREATE_HOME is not enabled, no home directories are created."),(0,o.kt)("li",{parentName:"ul"},"Use ",(0,o.kt)("inlineCode",{parentName:"li"},"man useradd")," for more information")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'# By putting COMMENT in quote, it ensure that all comment will be seen as a single entity, not affected by characters like spaces.\n$ useradd -c "${COMMENT}" -m ${USER_NAME}\n')),(0,o.kt)("h3",{id:"convention"},"Convention"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"By covention, a username is less than 8 characters. So if your username is longer than that, it may not be fully displayed in some commands like ",(0,o.kt)("inlineCode",{parentName:"li"},"ps -ef")),(0,o.kt)("li",{parentName:"ul"},"Also, you cannot use some special characters just like you register in some website.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ sudo useradd dougstamper\n\n# Use login shell\n$ sudo su - dougstamper\n\n# Notice that the username is not fully displayed\n$ ps -ef\n# Result:\n# dougsta+ ...\n")),(0,o.kt)("h3",{id:"configuration"},"Configuration"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"You can see the ",(0,o.kt)("inlineCode",{parentName:"li"},"CONFIGURATION")," field in the man page to see some configs when creating a user."),(0,o.kt)("li",{parentName:"ul"},"The default config is stored in ",(0,o.kt)("inlineCode",{parentName:"li"},"/etc/login.defs"))),(0,o.kt)("h2",{id:"set-users-password"},"Set user's password"),(0,o.kt)("p",null,"A default scene for this is that an admin will set a default password and then a new user uses this default password and then change to a new password."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"--stdin"),": Get data from standard input (pipe)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-e")," --expire: force user to change the password when they first login")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'# OR: `echo "${USER_NAME}:${PASSWORD}" | chpasswd`\n$ echo ${PASSWORD} | passwd --stdin ${USER_NAME}\n\n# Force password change on first login.\npasswd -e ${USER_NAME}\n')),(0,o.kt)("h2",{id:"run-the-script"},"Run the script"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Only root can creat a user.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ sudo ./create-user.sh\n")),(0,o.kt)("h2",{id:"switch-to-a-new-account"},"Switch to a new account"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"We are not using ",(0,o.kt)("inlineCode",{parentName:"li"},"sudo")," because vagrant is just a normal user, we can't trust it."),(0,o.kt)("li",{parentName:"ul"},"If you use ",(0,o.kt)("inlineCode",{parentName:"li"},"sudo")," to login, it will require no password"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-")," means login shell"),(0,o.kt)("li",{parentName:"ul"},"The first time you login this account, it will force you to change the password.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ su - jsmith\n")),(0,o.kt)("h2",{id:"full-script"},"Full script"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"#!/bin/bash\n\n# This script creates an account on the local system.\n# You will be prompted for the account name and password.\n\n# Ask for the user name.\nread -p 'Enter the username to create: ' USER_NAME\n\n# Ask for the real name.\nread -p 'Enter the name of the person who this account is for: ' COMMENT\n\n# Ask for the password.\nread -p 'Enter the password to use for the account: ' PASSWORD\n\n# Create the user.\nuseradd -c \"${COMMENT}\" -m ${USER_NAME}\n\n# Set the password for the user.\n# NOTE: You can also use the following command:\n#    echo \"${USER_NAME}:${PASSWORD}\" | chpasswd\necho ${PASSWORD} | passwd --stdin ${USER_NAME}\n\n# Force password change on first login.\npasswd -e ${USER_NAME}\n")),(0,o.kt)("h2",{id:"another-example"},"Another example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'#!/bin/bash\n\n# Make sure this script is executed by root\nif [[ "${UID}" -ne 0 ]]\nthen\n  echo \'You are not root\'\n  exit 1\nfi\n\n# Enter username\nread -p "Enter your username: " USER_NAME\n\n# Enter name for the account\nread -p "Enter your name in charge: " COMMENT\n\n# Enter password\nread -p "Enter your password: " PASSWORD\n\n# Create a new user\nuseradd -c "${COMMENT}" -m "${USER_NAME}"\n\n# Set default password\necho ${PASSWORD} | passwd --stdin ${USER_NAME}\n\n# Force password change on first login.\npasswd -e ${USER_NAME}\n\n# Check if the creation of user success or not\nif [[ "${?}" -ne 0 ]]\nthen\n  echo \'Your account cannot be created!\'\n  exit 1\nfi\n\necho "Your username is: ${USER_NAME}"\necho "Your default password is: ${PASSWORD}"\necho "Your host is: ${HOSTNAME}"\n')),(0,o.kt)("h2",{id:"references"},"References"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://cloudacademy.com/course/shell-scripting-user-account-creation-1517/"},"https://cloudacademy.com/course/shell-scripting-user-account-creation-1517/"))))}d.isMDXComponent=!0}}]);