(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8580],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return d}});var o=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,l=function(e,t){if(null==e)return{};var n,o,l={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(n),d=l,h=m["".concat(s,".").concat(d)]||m[d]||u[d]||a;return n?o.createElement(h,r(r({ref:t},c),{},{components:n})):o.createElement(h,r({ref:t},c))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,r=new Array(a);r[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,r[1]=i;for(var p=2;p<a;p++)r[p]=n[p];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3955:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return m}});var o=n(4034),l=n(9973),a=(n(7294),n(3905)),r=["components"],i={},s="ONOS + mininet",p={unversionedId:"System/Network/Operation/ONOS-Lab",id:"System/Network/Operation/ONOS-Lab",isDocsHomePage:!1,title:"ONOS + mininet",description:"We will use Ubuntu 20.04 for onos. (You can also run on OSX, but you will need to change the installation steps.)",source:"@site/docs/System/Network/Operation/ONOS-Lab.md",sourceDirName:"System/Network/Operation",slug:"/System/Network/Operation/ONOS-Lab",permalink:"/docs/System/Network/Operation/ONOS-Lab",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Multicast",permalink:"/docs/System/Distributed/Concepts/Multicast"},next:{title:"P4 Overview",permalink:"/docs/System/Network/Virtualization/P4/P4-Overview"}},c=[{value:"ONOS",id:"onos",children:[{value:"Installation",id:"installation",children:[],level:3},{value:"GUI",id:"gui",children:[],level:3},{value:"CLI",id:"cli",children:[],level:3},{value:"Cleanup",id:"cleanup",children:[],level:3}],level:2},{value:"Mininet",id:"mininet",children:[{value:"Installation",id:"installation-1",children:[],level:3},{value:"Create a topology",id:"create-a-topology",children:[],level:3},{value:"Discover Hosts",id:"discover-hosts",children:[],level:3},{value:"Destrop topology",id:"destrop-topology",children:[],level:3}],level:2},{value:"Add Flows",id:"add-flows",children:[{value:"Launch a command",id:"launch-a-command",children:[],level:3},{value:"Rules",id:"rules",children:[],level:3},{value:"Automation",id:"automation",children:[],level:3}],level:2},{value:"References",id:"references",children:[],level:2}],u={toc:c};function m(e){var t=e.components,n=(0,l.Z)(e,r);return(0,a.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"onos--mininet"},"ONOS + mininet"),(0,a.kt)("p",null,"We will use Ubuntu 20.04 for onos. (You can also run on OSX, but you will need to change the installation steps.)"),(0,a.kt)("h2",{id:"onos"},"ONOS"),(0,a.kt)("h3",{id:"installation"},"Installation"),(0,a.kt)("p",null,"Follow this ",(0,a.kt)("a",{parentName:"p",href:"https://ithelp.ithome.com.tw/articles/10244324"},"instruction"),". We will use a binary release to start onos instead of building the source code."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Install some dependencies")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt -y install git\nsudo apt-get update && apt-get upgrade\nsudo apt -y install git\nsudo apt-get install openjdk-11-jdk\nsudo apt-get -y install maven\nsudo apt-get update\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Add this to ",(0,a.kt)("inlineCode",{parentName:"li"},"~/.bashrc"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64/\nexport M2_HOME=/opt/maven\nexport MAVEN_HOME=/opt/maven\nexport PATH=${M2_HOME}/bin:${PATH}\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Download Onos release (Go to ONOS wiki downloads or following the commands)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~/Downloads\n\n# Download onos 2.5.0\nwget https://repo1.maven.org/maven2/org/onosproject/onos-releases/2.5.0/onos-2.5.0.tar.gz\ntar zxvf onos-2.5.0.tar.gz\n\ncd onos-2.5.0\n\n# Start service\n./bin/onos-service\n# Or ./bin/onos-service start\n")),(0,a.kt)("h3",{id:"gui"},"GUI"),(0,a.kt)("p",null,"After complete the previous installation section, you can login to the cli."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Go to ",(0,a.kt)("inlineCode",{parentName:"li"},"localhost:8181/onos/ui/login.html")," with username = ",(0,a.kt)("inlineCode",{parentName:"li"},"onos"),", password = ",(0,a.kt)("inlineCode",{parentName:"li"},"rocks"),".")),(0,a.kt)("h3",{id:"cli"},"CLI"),(0,a.kt)("p",null,"After complete the previous installtion section, you can also login to the cli."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Generate ssh key (keep pressing ",(0,a.kt)("inlineCode",{parentName:"li"},"Enter"),")")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ssh-keygen -t rsa\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Change onos-user-key")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~/Downloads/onos-2.5.0\n./bin/onos-user-key $USER ~/.ssh/id_rsa.pub\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Login to the cli")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~/Downloads/onos-2.5.0\n# Login to CLI\n./bin/onos\n")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Install Openflow feature (under cli)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"onos> app activate org.onosproject.openflow\n")),(0,a.kt)("h3",{id:"cleanup"},"Cleanup"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"onos> wipe-out please\n")),(0,a.kt)("h2",{id:"mininet"},"Mininet"),(0,a.kt)("h3",{id:"installation-1"},"Installation"),(0,a.kt)("p",null,"Go to this ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/mininet/mininet/releases"},"website")," and download the latest release. (under the Assets section)"),(0,a.kt)("h3",{id:"create-a-topology"},"Create a topology"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Using the default ",(0,a.kt)("inlineCode",{parentName:"li"},"topo-2sw-2host.py")," under the ",(0,a.kt)("inlineCode",{parentName:"li"},"mininet/custom")," directory")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"mininet@mininet-vm> sudo mn --mac --switch ovsk,protocols=OpenFlow13 --controller=remote,ip=192.168.100.1 --custom ./mininet/custom/topo-2sw-2host.py --topo mytopo\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Or you can define another topology file like this")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"mininet@mininet-vm> sudo mn --mac --switch ovsk,protocols=OpenFlow13 --controller=remote,ip=192.168.100.1 --custom ./mininet/custom/mytopo.py --topo mytopo\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="test.py"',title:'"test.py"'},"from mininet.topo import Topo\n\nclass MyTopo( Topo ):\n    \"Simple topology example.\"\n\n    def build( self ):\n        \"Create custom topo.\"\n\n        # Add hosts and switches\n        leftHost = self.addHost( 'h1' )\n        rightHost = self.addHost( 'h2' )\n        leftSwitch = self.addSwitch( 's1' )\n        rightSwitch = self.addSwitch( 's2' )\n\n        # Add links\n        self.addLink( leftHost, leftSwitch )\n        self.addLink( leftSwitch, rightSwitch )\n        self.addLink( rightSwitch, rightHost )\n\n\ntopos = { 'mytopo': ( lambda: MyTopo() ) }\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Check if the switches has correctly configured")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"onos> devices\n")),(0,a.kt)("h3",{id:"discover-hosts"},"Discover Hosts"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"This command allows onos to know all the hosts that a switch has connected.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"mininet> pingall\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Check if the hosts show up.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"onos> hosts\n")),(0,a.kt)("h3",{id:"destrop-topology"},"Destrop topology"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Exit the mininet topology\nmininet> exit\n\n# Clean up\nmininet@mininet-vm> sudo mn -c\n\n# Exit the ssh session\nmininet@mininet-vm> exit\n")),(0,a.kt)("h2",{id:"add-flows"},"Add Flows"),(0,a.kt)("h3",{id:"launch-a-command"},"Launch a command"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Create a flow for a device (the id must match in both url and json)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'local> curl -X POST -H "content-type:application/json" http://localhost:8181/onos/v1/flows/of:0000000000000001 -d @./test_1.json --user onos:rocks\n')),(0,a.kt)("h3",{id:"rules"},"Rules"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"NOTE: you have to look at which port the switch is configured. The port number is related to topology you just defined. Or you can just find the port in GUI."),(0,a.kt)("li",{parentName:"ul"},"Also, you have to defind each rules on each switch."),(0,a.kt)("li",{parentName:"ul"},"For switch s1 (also host h1)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="h1-1-2.json"',title:'"h1-1-2.json"'},'{\n  "priority": 60000,\n  "timeout": 0,\n  "isPermanent": true,\n  "deviceId": "of:0000000000000001",\n  "treatment": {\n    "instructions": [\n      {\n        "type": "OUTPUT",\n        "port": "2"\n      }\n    ]\n  },\n  "selector": {\n    "criteria": [\n      {\n        "type": "ETH_TYPE",\n        "ethType": "0x0800"\n      },\n      {\n        "type": "IPV4_DST",\n        "ip": "10.0.0.2/32"\n      }\n    ]\n  }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="h1_2-1.json"',title:'"h1_2-1.json"'},'{\n  "priority": 60000,\n  "timeout": 0,\n  "isPermanent": true,\n  "deviceId": "of:0000000000000001",\n  "treatment": {\n    "instructions": [\n      {\n        "type": "OUTPUT",\n        "port": "1"\n      }\n    ]\n  },\n  "selector": {\n    "criteria": [\n      {\n        "type": "ETH_TYPE",\n        "ethType": "0x0800"\n      },\n      {\n        "type": "IPV4_DST",\n        "ip": "10.0.0.1/32"\n      }\n    ]\n  }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="h1_arp.json"',title:'"h1_arp.json"'},'{\n  "priority": 60000,\n  "timeout": 0,\n  "isPermanent": true,\n  "deviceId": "of:0000000000000001",\n  "treatment": {\n    "instructions": [\n      {\n        "type": "OUTPUT",\n        "port": "FLOOD"\n      }\n    ]\n  },\n  "selector": {\n    "criteria": [\n      {\n        "type": "ETH_TYPE",\n        "ethType": "0x0806"\n      }\n    ]\n  }\n}\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"For switch s2 (also host h2)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="h2-1-2.json"',title:'"h2-1-2.json"'},'{\n  "priority": 60000,\n  "timeout": 0,\n  "isPermanent": true,\n  "deviceId": "of:0000000000000002",\n  "treatment": {\n    "instructions": [\n      {\n        "type": "OUTPUT",\n        "port": "2"\n      }\n    ]\n  },\n  "selector": {\n    "criteria": [\n      {\n        "type": "ETH_TYPE",\n        "ethType": "0x0800"\n      },\n      {\n        "type": "IPV4_DST",\n        "ip": "10.0.0.2/32"\n      }\n    ]\n  }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="h2_2-1.json"',title:'"h2_2-1.json"'},'{\n  "priority": 60000,\n  "timeout": 0,\n  "isPermanent": true,\n  "deviceId": "of:0000000000000002",\n  "treatment": {\n    "instructions": [\n      {\n        "type": "OUTPUT",\n        "port": "1"\n      }\n    ]\n  },\n  "selector": {\n    "criteria": [\n      {\n        "type": "ETH_TYPE",\n        "ethType": "0x0800"\n      },\n      {\n        "type": "IPV4_DST",\n        "ip": "10.0.0.1/32"\n      }\n    ]\n  }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="h1_arp.json"',title:'"h1_arp.json"'},'{\n  "priority": 60000,\n  "timeout": 0,\n  "isPermanent": true,\n  "deviceId": "of:0000000000000002",\n  "treatment": {\n    "instructions": [\n      {\n        "type": "OUTPUT",\n        "port": "FLOOD"\n      }\n    ]\n  },\n  "selector": {\n    "criteria": [\n      {\n        "type": "ETH_TYPE",\n        "ethType": "0x0806"\n      }\n    ]\n  }\n}\n')),(0,a.kt)("h3",{id:"automation"},"Automation"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"You can write a shell script to automate this")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'# Add flows for switch 1\ncurl -X POST -H "content-type:application/json" \\\n    http://localhost:8181/onos/v1/flows/of:0000000000000001 \\\n    -d @./s1/h1_1-2.json --user onos:rocks\ncurl -X POST -H "content-type:application/json" \\\n    http://localhost:8181/onos/v1/flows/of:0000000000000001 \\\n    -d @./s1/h1_2-1.json --user onos:rocks\ncurl -X POST -H "content-type:application/json" \\\n    http://localhost:8181/onos/v1/flows/of:0000000000000001 \\\n    -d @./s1/h1_arp.json --user onos:rocks\n# Add flows for switch 2\ncurl -X POST -H "content-type:application/json" \\\n    http://localhost:8181/onos/v1/flows/of:0000000000000002 \\\n    -d @./s2/h2_1-2.json --user onos:rocks\ncurl -X POST -H "content-type:application/json" \\\n    http://localhost:8181/onos/v1/flows/of:0000000000000002 \\\n    -d @./s2/h2_2-1.json --user onos:rocks\ncurl -X POST -H "content-type:application/json" \\\n    http://localhost:8181/onos/v1/flows/of:0000000000000002 \\\n    -d @./s2/h2_arp.json --user onos:rocks\n')),(0,a.kt)("h2",{id:"references"},"References"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://ithelp.ithome.com.tw/articles/10244324"},"https://ithelp.ithome.com.tw/articles/10244324")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://ithelp.ithome.com.tw/articles/10243780"},"https://ithelp.ithome.com.tw/articles/10243780")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://ithelp.ithome.com.tw/articles/10249438?sc=rss.iron"},"https://ithelp.ithome.com.tw/articles/10249438?sc=rss.iron")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://hackmd.io/@nosignal/rkXUpWMrz?type=view"},"https://hackmd.io/@nosignal/rkXUpWMrz?type=view")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://stackoverflow.com/questions/52504825/how-to-install-jdk-11-under-ubuntu"},"https://stackoverflow.com/questions/52504825/how-to-install-jdk-11-under-ubuntu")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/mininet/mininet/blob/master/custom/topo-2sw-2host.py"},"https://github.com/mininet/mininet/blob/master/custom/topo-2sw-2host.py"))))}m.isMDXComponent=!0}}]);