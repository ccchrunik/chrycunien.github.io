(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3039],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),f=u(n),m=i,d=f["".concat(s,".").concat(m)]||f[m]||p[m]||o;return n?r.createElement(d,a(a({ref:t},c),{},{components:n})):r.createElement(d,a({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8571:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return f}});var r=n(4034),i=n(9973),o=(n(7294),n(3905)),a=["components"],l={},s="Function",u={unversionedId:"Linux/Script/Syntax/Function",id:"Linux/Script/Syntax/Function",isDocsHomePage:!1,title:"Function",description:"- DRY principle: Don't repeast yourself",source:"@site/docs/Linux/Script/Syntax/Function.md",sourceDirName:"Linux/Script/Syntax",slug:"/Linux/Script/Syntax/Function",permalink:"/docs/Linux/Script/Syntax/Function",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Case",permalink:"/docs/Linux/Script/Syntax/Case"},next:{title:"IO flow",permalink:"/docs/Linux/Script/Syntax/IO"}},c=[{value:"Examples",id:"examples",children:[],level:2},{value:"References",id:"references",children:[],level:2}],p={toc:c};function f(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"function"},"Function"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"DRY principle: Don't repeast yourself"),(0,o.kt)("li",{parentName:"ul"},"Functions help you organize the same bit of code in the same place so you can reuse it and it servers as a single update point"),(0,o.kt)("li",{parentName:"ul"},"The exit status of a function will be the exit status of the last command in the function (unless you use return explicitly)")),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"local")," keyword: to limit the scope of the variable to the function, the variable only exists in the function"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"readonly")," keyword: to prevent modification later"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"${@}"),": expands to positional arguments, starting from one"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"return")," keyword: return from the function"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"exit"),": exit the entire script"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cp -p"),": copy the file with its onwership, privilege, timestamp ... properties being preserved"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"logger -t"),": log to syslog with name as tag, in centos syslog = ",(0,o.kt)("inlineCode",{parentName:"li"},"/var/log/messages")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"date +%F-%N"),": Display Full date and Nanoseconds")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'#!/bin/bash\n\n# This script demonstrates the use of functions.\n\nlog() {\n  # This function sends a message to syslog and to standard output if VERBOSE is true.\n\n  local MESSAGE="${@}"\n  if [[ "${VERBOSE}" = \'true\' ]]\n  then\n    echo "${MESSAGE}"\n  fi\n  logger -t luser-demo10.sh "${MESSAGE}"\n}\n\nbackup_file() {\n  # This function creates a backup of a file.  Returns non-zero status on error.\n\n  local FILE="${1}"\n\n  # Make sure the file exists.\n  if [[ -f "${FILE}" ]]\n  then\n    # Create the file name that is easy to sort files by date\n    local BACKUP_FILE="/var/tmp/$(basename ${FILE}).$(date +%F-%N)"\n    log "Backing up ${FILE} to ${BACKUP_FILE}."\n\n    # The exit status of the function will be the exit status of the cp command.\n    cp -p ${FILE} ${BACKUP_FILE}\n  else\n    # The file does not exist, so return a non-zero exit status.\n    return 1\n  fi\n}\n\nreadonly VERBOSE=\'true\'\nlog \'Hello!\'\nlog \'This is fun!\'\n\nbackup_file /etc/passwd\n\n# Make a decision based on the exit status of the function.\n# Note this is for demonstration purposes.  You could have\n# put this functionality inside of the backup_file function.\nif [[ "${?}" -eq \'0\' ]]\nthen\n  log \'File backup succeeded!\'\nelse\n  log \'File backup failed!\'\n  exit 1\nfi\n')),(0,o.kt)("h2",{id:"references"},"References"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://cloudacademy.com/course/shell-scripting-parsing-command-line-options-1520"},"https://cloudacademy.com/course/shell-scripting-parsing-command-line-options-1520"))))}f.isMDXComponent=!0}}]);